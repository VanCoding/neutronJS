.neutron-area
    each id,i in [null].concat(this.props.data.order)
        if id!=null
            Widget(data=this.props.data.widgets[id])
        if this.props.page.data.edit
            .neutron-area-buttons
                DropdownButton(bsSize="xsmall",title=Glyphicon({glyph:"plus-sign"}))
                    each widget,id in this.props.page.widgets
                        MenuItem(eventKey=id onSelect=this.add(i,id) href="javascript:")= id
                if i>0
                    Button(bsSize="xsmall" onClick=this.remove(i-1))
                        Glyphicon(glyph="trash")
main.
    var Button = require("react-bootstrap/Button");
    var DropdownButton = require("react-bootstrap/DropdownButton");
    var Glyphicon = require("react-bootstrap/Glyphicon");
    var MenuItem = require("react-bootstrap/MenuItem");
    var Widget = require("../../widget.js")
    
    exports.add = function(pos,widgetid){
        var self = this;
        return function(){
            var id = "widget"+new Date().getTime();
            self.props.data.widgets[id] = require(self.props.page.widgets[widgetid]).getDefaultData();
            self.props.data.order.splice(pos,0,id)
            self.forceUpdate();
        }
    }
    exports.remove = function(pos){
        var self = this;
        return function(){
            delete self.props.data.widgets[self.props.data.order[pos]];
            self.props.data.order.splice(pos,1);
            self.forceUpdate();
        }
    }
    
    exports.statics = {
        getDefaultData:function(){
            return {
                type:"area",
                order:[],
                widgets:{}
            }
        }
    }